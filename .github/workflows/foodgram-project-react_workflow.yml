name: API for Foodgram project workflow!

on: [push]

jobs:
  move_to_backend_with_python:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Test with flake8 and django tests
      run: |
        cd backend

  build_backend_and_push_to_docker_hub:
    name: Push Backend image to Docker Hub
    runs-on: ubuntu-latest
    needs: move_to_backend_with_python
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.7.0 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Backend to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend

  build_frontend_and_push_to_docker_hub:
    name: Push Frontend image to Docker Hub
    runs-on: ubuntu-latest
    needs: build_backend_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Move to front
        run: |
          cd ../frontend/
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.7.0 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Frontend to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend

  deploy:
    name: Deploy to remote server
    runs-on: ubuntu-latest
    needs: build_frontend_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker-compose down -v
          sudo docker-compose stop
          sudo docker-compose rm web
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker-compose up -d --build

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@v0.1.1
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!

